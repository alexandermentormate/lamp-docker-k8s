version: "3.9"
services:
  backend:
    build:
      context: ./services/backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    restart: unless-stopped
    healthcheck:
      test:
        ["CMD", "curl", "-f", "http://localhost:5000/health", "||", "exit 1"]
      interval: 30s
      timeout: 30s
      retries: 5
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "False"
      APP_PORT: 5000
      MONGODB_DATABASE: flaskdb
      MONGODB_USERNAME: flaskuser
      MONGODB_PASSWORD: mongopass
      MONGODB_HOSTNAME: mongodb
      MONGODB_PORT: 27017
    volumes:
      - ./services/backend:/app
    depends_on:
      - database
    networks:
      - frontend-net
      - backend-net
    stdin_open: true
    tty: true

  database:
    image: mongo:4.0.8
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
      MONGO_INITDB_DATABASE: flaskdb
      MONGODB_DATABASE: flaskdb
      MONGODB_USERNAME: flaskuser
      MONGODB_PASSWORD: mongopass
    ports:
      - 27017:27017
    volumes:
      - ./services/database/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
      - mongodbdata:/data/db
    networks:
      - backend-net

  webserver:
    build:
      context: ./services/webserver
      dockerfile: Dockerfile
    container_name: webserver
    restart: unless-stopped
    environment:
      APP_ENV: "prod"
      APP_NAME: "webserver"
      APP_DEBUG: "false"
      SERVICE_NAME: "webserver"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginxdata:/var/log/nginx
    depends_on:
      - backend
      - frontend
    networks:
      - frontend-net

  frontend:
    build:
      context: ./services/frontend
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    volumes:
      - ./services/frontend:/app
    depends_on:
      - backend
    networks:
      - frontend-net

networks:
  frontend-net:
    driver: bridge
  backend-net:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  nginxdata:
    driver: local
